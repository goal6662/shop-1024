server:
  port: 9301    # 8080留给网关
spring:
  profiles:
    active: dev
  application:
    name: order-service   # 微服务名称
  cloud:
    nacos:
      server-addr: 192.168.121.155:8848
  # 数据库
  datasource:
    url: jdbc:mysql://${shop.db.uri}/shop_order?useUnicode=true&allowPublicKeyRetrieval=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: ${shop.db.pwd}
    # mysql8
    driver-class-name: com.mysql.cj.jdbc.Driver
#    driver-class-name: com.mysql.jdbc.Driver # mysql8 一下不加 cj
  # redis 配置
  redis:
    host: ${shop.redis.host}
    port: ${shop.redis.port}
    password: ${shop.redis.pwd}
  # rabbitmq
  rabbitmq:
    host: ${shop.rabbitmq.host}
    port: ${shop.rabbitmq.port} # 端口
    username: ${shop.rabbitmq.username}
    password: ${shop.rabbitmq.password}
    virtual-host: ${shop.rabbitmq.virtual-host}
    listener:
      simple:
        prefetch: 1   # 预拉取消息数1：当前1条消息处理完成后，才能继续接收消息
        acknowledge-mode: manual  # 手动确认消息
mybatis-plus:
  configuration:
    # mp日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


# 设置日志级别, ERROR/WARN/INFO/DEBUG,默认info以上显示
logging:
  level:
    root: info

app:
  config:
    api:
      version: v1

#自定义消息队列配置，发送锁定库存消息 -> 延迟exchange -> lock.queue -> 死信exchange -> release.queue
mq:
  config:
    order:
      #延迟队列，不能被监听消费
      release_delay_queue: order.release.delay.queue
      #延迟队列的消息过期后转发的队列
      release_queue: order.release.queue
      #交换机
      event_exchange: order.event.exchange
      #进入延迟队列的路由key
      release_delay_routing_key: order.release.delay.routing.key
      #消息过期，进入释放死信队列的key
      release_routing_key: order.release.routing.key
      #消息过期时间,毫秒,测试改为15秒
    ttl: 300000


# aliyunOSS
aliyun:
  oss:
    endpoint: ${aliyun.oss.endpoint}
    access-key-id: ${aliyun.oss.access-key-id}
    access-key-secret: ${aliyun.oss.access-key-secret}
    bucket-name: ${aliyun.oss.bucket-name}
feign:
  okhttp:
    enabled: true  # 开启连接池支持

# AliPay
alipay:
  config:
    # 请在完全配置好支付信息后开启
    enabled: true
    # (必须 - 本处是沙箱网关) 支付宝网关
    server-url: https://openapi-sandbox.dl.alipaydev.com/gateway.do
    # (必须) 开发者id
    appid: ${alipay.config.appid}
    # (必须) 开发者私钥 由开发者自己生成
    private-key: ${alipay.config.private-key}
    # (必须 - 固定值) 参数返回格式，只支持 JSON 格式
    format: JSON
    # (必须 - 推荐值) 编码集，支持 GBK/UTF-8
    charset: UTF-8
    # (必须) 支付宝公钥
    alipay-public-key: ${alipay.config.alipay-public-key}
    # (必须 - 推荐值) 生成签名字符串所使用的签名算法类型，目前支持 RSA2 和 RSA，推荐使用 RSA2
    sign-type: RSA2
    # (非必须 - 极力推荐填写) 服务器异步通知页面路径  需http://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问：支付完成后，支付宝调用该地址
    notify-url: ${alipay.config.notify-url}
    # (非必须 - 推荐填写) 页面跳转同步通知页面路径 需http(s)://格式的完整路径，不能加?id=123这类自定义参数，必须外网可以正常访问
    return-url: ${alipay.config.return-url}

# 线程池配置
thread:
  pool:
    executor:
      config:
        core-pool-size: 20
        max-pool-size: 50
        keep-alive-time: 60   # 秒
        block-queue-size: 5000
        policy: CallerRunsPolicy

#seata:
#  tx-service-group: ${spring.application.name}-group
#  service:
#    grouplist:
#      shop: 192.168.121.153:8099
#    vgroup-mapping:
#      order-service-group: shop