server:
  port: 9201    # 8080留给网关
spring:
  profiles:
    active: dev
  application:
    name: product-service   # 微服务名称
  cloud:
    nacos:
      server-addr: 192.168.121.155:8848
  # 数据库
  datasource:
    url: jdbc:mysql://${shop.db.uri}/shop_product?useUnicode=true&allowPublicKeyRetrieval=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: ${shop.db.pwd}
    # mysql8
    driver-class-name: com.mysql.cj.jdbc.Driver
#    driver-class-name: com.mysql.jdbc.Driver # mysql8 一下不加 cj
  # redis 配置
  redis:
    host: ${shop.redis.host}
    port: ${shop.redis.port}
    password: ${shop.redis.pwd}
  # rabbitmq
  rabbitmq:
    host: ${shop.rabbitmq.host}
    port: ${shop.rabbitmq.port} # 端口
    username: ${shop.rabbitmq.username}
    password: ${shop.rabbitmq.password}
    virtual-host: ${shop.rabbitmq.virtual-host}
    listener:
      simple:
        prefetch: 1   # 预拉取消息数1：当前1条消息处理完成后，才能继续接收消息
        acknowledge-mode: manual  # 手动确认消息
mybatis-plus:
  configuration:
    # mp日志
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


# 设置日志级别, ERROR/WARN/INFO/DEBUG,默认info以上显示
logging:
  level:
    root: info

app:
  config:
    api:
      version: v1

# aliyunOSS
aliyun:
  oss:
    endpoint: ${aliyun.oss.endpoint}
    access-key-id: ${aliyun.oss.access-key-id}
    access-key-secret: ${aliyun.oss.access-key-secret}
    bucket-name: ${aliyun.oss.bucket-name}
feign:
  okhttp:
    enabled: true  # 开启连接池支持

#自定义消息队列配置，发送锁定库存消息 -> 延迟exchange -> lock.queue -> 死信exchange -> release.queue
mq:
  config:
    product:
      #延迟队列，不能被监听消费
      release_delay_queue: product.release.delay.queue
      #延迟队列的消息过期后转发的队列
      release_queue: product.release.queue
      #交换机
      event_exchange: product.event.exchange
      #进入延迟队列的路由key
      release_delay_routing_key: product.release.delay.routing.key
      #消息过期，进入释放死信队列的key
      release_routing_key: product.release.routing.key
      #消息过期时间,毫秒,测试改为15秒
    ttl: 360000

#seata:
#  tx-service-group: ${spring.application.name}-group
#  service:
#    grouplist:
#      shop: 192.168.121.153:8099
#    vgroup-mapping:
#      product-service-group: shop